const PDFDocument = require('pdfkit');

// Generate a PDF from summary data
const generatePDF = (title, originalUrl, summaryText, originalWordCount, summaryWordCount) => {
  return new Promise((resolve, reject) => {
    try {
      // Create a PDF document
      const doc = new PDFDocument({
        margins: { top: 50, bottom: 50, left: 50, right: 50 }
      });
      
      // Collect PDF data chunks
      const chunks = [];
      doc.on('data', chunk => chunks.push(chunk));
      doc.on('end', () => {
        const pdfBuffer = Buffer.concat(chunks);
        resolve(pdfBuffer);
      });
      
      // Add content to PDF
      // Title
      doc.fontSize(20).font('Helvetica-Bold').text(title, { align: 'center' });
      doc.moveDown();
      
      // Meta information
      doc.fontSize(10).font('Helvetica');
      doc.text(`Original URL: ${originalUrl}`, { align: 'left' });
      doc.text(`Original Word Count: ${originalWordCount}`, { align: 'left' });
      doc.text(`Summary Word Count: ${summaryWordCount}`, { align: 'left' });
      doc.text(`Reduction: ${Math.round((1 - (summaryWordCount / originalWordCount)) * 100)}%`, { align: 'left' });
      doc.moveDown(2);
      
      // Summary heading
      doc.fontSize(16).font('Helvetica-Bold').text('Summary', { align: 'left' });
      doc.moveDown();
      
      // Summary content
      doc.fontSize(12).font('Helvetica').text(summaryText, {
        align: 'left',
        lineGap: 5
      });
      
      // Footer
      const bottomPosition = doc.page.height - 50;
      doc.fontSize(10).text('Generated by AI-Powered Article Summarizer', {
        align: 'center',
        y: bottomPosition
      });
      
      // Finalize the PDF
      doc.end();
    } catch (error) {
      reject(error);
    }
  });
};

module.exports = {
  generatePDF
}; 